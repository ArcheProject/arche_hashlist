<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      metal:use-macro="view.macro('arche:templates/base_view.pt')"
      i18n:domain="voteit.motion">
<body>
<tal:main metal:fill-slot="main-content">
    <h1>${context.title}</h1>

    <p class="lead" tal:condition="context.description">${context.description}</p>

    <hr/>

    <h3 i18n:translate="">Status</h3>
    <ul>
        <li>
            <tal:ts i18n:translate="">Hashed:</tal:ts>
            ${len(context.hashset)}
        </li>
        <li>
            <tal:ts i18n:translate="">Unprocessed rows:</tal:ts> ${len(context.plaintext_rows)}
        </li>
    </ul>

    <tal:process tal:condition="len(context.plaintext_rows)">
        <p i18n:translate="">Processing hashes takes almost 1 second per row, so if i need
            to hash a lot of rows, use the console script.</p>
        <p>
            <a href="${request.resource_url(context, 'work_on_hashing.json')}"
               class="btn btn-primary"
               data-hashwork>
                Hash added data
                <span data-actionmarker="glyphicon glyphicon-refresh rotate-me"></span>
            </a>
        </p>
        <script>
            $("[data-hashwork]").on('click', function(event) {
                event.preventDefault();
                send_hashing_request_from(event.currentTarget);
            });

            function send_hashing_request_from(selector) {
                var elem = $(selector);
                elem.addClass('disabled')
                arche.actionmarker_feedback(elem, true);
                var request = arche.do_request(elem.attr('href'));
                request.always(function() {
                    arche.actionmarker_feedback(elem, false);
                    elem.removeClass('disabled')
                });
                request.done(function(response) {
                    console.log(response);
                    arche.create_flash_message(response['msg']);
                    if (response['remaining'] > 0) {
                        send_hashing_request_from(elem);
                    };
                });
            }
        </script>
    </tal:process>



</tal:main>
</body>
</html>
